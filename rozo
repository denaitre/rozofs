
_rozo()
{
    local cur prev opts base
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    #opts="--version --debug --help"
    opts="agent layout node volume export storage --version --debug --help"

#    if [[ ${cur} == -* ]] ; then
#        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
#        return 0
#    fi

    #
    #  Complete the arguments to some of the basic commands.
    #
    case "${prev}" in
    agent)
        local subopts="status start stop restart"
        COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
        return 0
        ;;
    layout)
        local subopts="get set"
        COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
        return 0
        ;;
    node)
        local subopts="list status config start stop rebuild"
        COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
        return 0
        ;;
    volume)
        local subopts="list stat get expand remove"
        COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
        return 0
        ;;
    export)
        local subopts="list create update remove get mount umount"
        COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
        return 0
        ;;
    storage)
        local subopts="list get add remove"
        COMPREPLY=( $(compgen -W "${subopts}" -- ${cur}) )
        return 0
        ;;
    *)
        ;;
    esac
#    local running=$(for x in `xm list --long | grep \(name | grep -v Domain-0 | awk '{ print $2 }' | tr -d \)`; do echo ${x} ; done )
#        COMPREPLY=( $(compgen -W "${running}" -- ${cur}) )
#            return 0
 
    COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
    return 0
}
complete -F _rozo rozo
